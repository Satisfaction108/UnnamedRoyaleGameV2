:root {
    --bg: #0b0d12;
    --panel: rgba(15,18,25,0.65);
    --panelSolid: #131722;
    --text: #e9eefc;
    --muted: #9fb0d0;
    --accentA: #8a5cff;
    --accentB: #00e7ff;
    --accentC: #ff3d71;
    --green: #38f2a5;
    --shadow: 0 10px 30px rgba(0,0,0,0.35), 0 8px 16px rgba(0,0,0,0.25);
    --radius: 18px;
    --speed: 240ms;
}

*#universalReset {
    all: unset
}

* {
    box-sizing: border-box
}

html, body {
    height: 100%
}

body {
    margin: 0;
    background: var(--bg);
    color: var(--text);
    font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Arial;
    overflow: hidden;
}

/* animated grid */
#bgGrid {
    position: fixed;
    inset: 0;
    background-image: radial-gradient(circle at 50% 50%, rgba(90,120,255,0.12), transparent 55%), repeating-linear-gradient(0deg, rgba(255,255,255,0.05) 0 1px, transparent 1px 32px), repeating-linear-gradient(90deg, rgba(255,255,255,0.05) 0 1px, transparent 1px 32px);
    filter: saturate(1.1) contrast(1.1);
    animation: hue 22s linear infinite;
    z-index: 0;
}

@keyframes hue {
    0% {
        filter: hue-rotate(0deg) saturate(1.05)
    }

    100% {
        filter: hue-rotate(360deg) saturate(1.05)
    }
}

#landing, #mainMenu, #overlay, dialog {
    position: relative;
    z-index: 1
}

#landing {
    position: fixed;
    inset: 0;
    display: grid;
    place-items: center;
    transition: opacity var(--speed) ease, transform var(--speed) ease;
}

#landingInner {
    width: min(820px, 90vw);
    padding: 40px;
    border-radius: calc(var(--radius) + 6px);
    background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
    backdrop-filter: blur(12px);
    box-shadow: var(--shadow);
    transform: translateY(-6px);
    animation: floatIn 420ms cubic-bezier(.18,.8,.22,1) both;
}

@keyframes floatIn {
    0% {
        opacity: 0;
        transform: translateY(22px) scale(.98)
    }

    100% {
        opacity: 1;
        transform: translateY(-6px) scale(1)
    }
}

#landingTitle {
    margin: 0 0 20px 0;
    text-align: center;
    font-size: clamp(28px, 5vw, 44px);
    letter-spacing: .6px;
    background: linear-gradient(90deg, var(--text), #b7c6ff);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
}

#landingButtons {
    display: flex;
    gap: 24px;
    justify-content: center;
    align-items: center;
    margin: 12px 0 8px 0;
}

.btnPrimary, .btnSecondary, .btnTertiary, .btnGhost, .btnBattle {
    appearance: none;
    border: 0;
    cursor: pointer;
    padding: 18px 28px;
    border-radius: 14px;
    font-weight: 700;
    letter-spacing: .3px;
    font-size: clamp(16px, 2.4vw, 20px);
    transform: translateZ(0);
    transition: transform var(--speed) cubic-bezier(.18,.8,.22,1), box-shadow var(--speed), background var(--speed), opacity var(--speed);
    box-shadow: var(--shadow);
    will-change: transform, box-shadow, background;
}

.btnPrimary {
    background: linear-gradient(135deg, var(--accentA), #5cc6ff);
    color: white
}

.btnSecondary {
    background: linear-gradient(135deg, var(--accentC), #ff8a5c);
    color: white
}

    .btnPrimary:hover, .btnSecondary:hover, .btnBattle:hover {
        transform: translateY(-2px) scale(1.02)
    }

    .btnPrimary:active, .btnSecondary:active, .btnBattle:active {
        transform: translateY(0) scale(.98)
    }

#landingTag {
    margin: 10px 0 0 0;
    text-align: center;
    color: var(--muted);
    font-size: 14px;
    letter-spacing: .4px;
    opacity: .9
}

/* overlay */
#overlay {
    position: fixed;
    inset: 0;
    background: rgba(8,10,14,0.65);
    backdrop-filter: blur(2px);
    opacity: 0;
    pointer-events: none;
    transition: opacity var(--speed);
}

    #overlay[data-open="true"] {
        opacity: 1;
        pointer-events: auto
    }

/* modals */
dialog {
    width: min(520px, 92vw);
    border: none;
    padding: 0;
    background: transparent
}

    dialog[open] {
        display: grid;
        place-items: center
    }

#modalLoginInner, #modalSignupInner {
    width: 100%;
    background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
    backdrop-filter: blur(12px);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    padding: 26px 26px 18px 26px;
    animation: modalIn 320ms cubic-bezier(.18,.8,.22,1) both;
}

@keyframes modalIn {
    0% {
        opacity: 0;
        transform: translateY(18px) scale(.98)
    }

    100% {
        opacity: 1;
        transform: translateY(0) scale(1)
    }
}

h2#loginTitle, h2#signupTitle {
    margin: 0 0 14px 0;
    font-size: 24px;
    letter-spacing: .3px
}

.fieldRow {
    display: grid;
    gap: 8px;
    margin: 12px 0
}

    .fieldRow label {
        font-size: 13px;
        color: var(--muted)
    }

    .fieldRow input {
        height: 46px;
        border-radius: 12px;
        background: rgba(255,255,255,0.06);
        border: 1px solid rgba(255,255,255,0.08);
        color: var(--text);
        padding: 0 14px;
        outline: none;
        transition: border var(--speed), box-shadow var(--speed)
    }

        .fieldRow input:focus {
            border: 1px solid #6aa8ff;
            box-shadow: 0 0 0 6px rgba(85,140,255,0.15)
        }

.rememberRow {
    display: flex;
    gap: 10px;
    align-items: center;
    margin-top: 2px;
    user-select: none
}

    .rememberRow input {
        width: 18px;
        height: 18px;
        accent-color: #6aa8ff;
        cursor: pointer
    }

    .rememberRow label {
        cursor: pointer;
        color: var(--muted)
    }

.modalActions {
    display: flex;
    gap: 12px;
    justify-content: flex-end;
    margin-top: 6px
}

.btnTertiary {
    background: linear-gradient(135deg, #2e3a5a, #3d4f7b);
    color: #e7efff
}

.btnGhost {
    background: transparent;
    color: var(--muted);
    border: 1px solid rgba(255,255,255,0.16)
}

    .btnGhost:hover {
        border-color: rgba(255,255,255,0.28);
        color: var(--text)
    }

.formError {
    min-height: 20px;
    color: #ff8a8a;
    font-size: 13px;
    margin-top: 8px
}

/* main menu */
#mainMenu {
    position: fixed;
    inset: 0;
    display: none;
    opacity: 0;
    transition: opacity var(--speed)
}

    #mainMenu[data-show="true"] {
        display: block;
        opacity: 1
    }

#topBar {
    position: absolute;
    top: 18px;
    left: 0;
    right: 0;
    height: 64px;
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    align-items: center;
    padding: 0 22px
}

#brandMini {
    justify-self: start;
    width: 56px;
    height: 40px;
    display: grid;
    place-items: center;
    background: linear-gradient(135deg, #202636, #1a2130);
    border: 1px solid rgba(255,255,255,0.08);
    color: #cfe0ff;
    border-radius: 10px;
    box-shadow: var(--shadow);
    font-weight: 800
}

.btnBattle {
    justify-self: center;
    padding: 14px 26px;
    font-size: 18px;
    border-radius: 999px;
    background: radial-gradient(120% 160% at 0% 0%, var(--green), #2ff0ff 40%, #4b79ff 80%);
    color: #071018;
    text-shadow: 0 2px 16px rgba(255,255,255,0.5)
}

#userBadge {
    justify-self: end;
    min-width: 140px;
    height: 40px;
    display: grid;
    place-items: center;
    padding: 0 14px;
    border-radius: 12px;
    background: linear-gradient(135deg, #1a2233, #151b28);
    border: 1px solid rgba(255,255,255,0.08);
    color: #cfe0ff;
    box-shadow: var(--shadow)
}

#mainContent {
    position: absolute;
    inset: 100px 28px 28px 28px;
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 22px;
}

/* account card */
#accountPanel {
    align-self: start
}

#accountCard {
    background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
    border: 1px solid rgba(255,255,255,0.08);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    padding: 18px
}

#accountTitle {
    font-weight: 800;
    letter-spacing: .3px;
    margin-bottom: 10px
}

#accountRow {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 12px
}

#accountLabel {
    color: var(--muted)
}

#accountName {
    font-weight: 700
}

#accountActions {
    display: flex;
    gap: 10px
}

#accountStats {
    margin-top: 12px;
    display: grid;
    gap: 6px
}

    #accountStats > div {
        display: flex;
        justify-content: space-between;
        background: rgba(255,255,255,0.04);
        padding: 10px 12px;
        border-radius: 10px
    }

/* TANK PICKER — centered, arrows docked to the sides of the card */
#selectorWrap {
    grid-column: 2 / 3;
    align-self: center;
    justify-self: center;
    width: 100%;
    display: grid;
    place-items: center;
}

#tankCard {
    position: relative;
    width: min(900px, 70vw);
    aspect-ratio: 2.2 / 1;
    border-radius: calc(var(--radius) + 8px);
    background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
    border: 1px solid rgba(255,255,255,0.08);
    box-shadow: var(--shadow);
    display: grid;
    place-items: center;
}

#tankSilhouette {
    position: absolute;
    inset: 18% 14%;
    background: #000;
    opacity: .9;
    border-radius: 14px
}

#questionMark {
    position: relative;
    font-size: clamp(64px, 8vw, 112px);
    color: #fff;
    text-shadow: 0 10px 26px rgba(0,0,0,0.35)
}

#tankLabel {
    position: absolute;
    bottom: 14px;
    left: 14px;
    font-size: 14px;
    color: var(--muted)
}

/* SVG arrows */
.navArrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 58px;
    height: 58px;
    border-radius: 16px;
    border: 0;
    background: linear-gradient(135deg, #2a3348, #1f2636);
    color: #e1eaff;
    cursor: pointer;
    box-shadow: var(--shadow);
    transition: transform var(--speed), background var(--speed), opacity var(--speed);
}

#prevTank {
    left: -78px
}

#nextTank {
    right: -78px
}

.navArrow:hover svg {
    transform: translateX(-2px)
}

#nextTank:hover svg {
    transform: translateX(2px)
}

.navArrow:active svg {
    transform: translateX(-6px)
}

#nextTank:active svg {
    transform: translateX(6px)
}

.navArrow[disabled] {
    opacity: .6;
    pointer-events: none
}

.navArrow svg {
    display: block;
    margin: 0 auto;
    transition: transform 160ms ease
}
/* === Overrides: solid colors + shimmer hover for landing buttons === */
.btnPrimary,
.btnSecondary {
    position: relative;
    overflow: hidden; /* needed for shimmer sweep */
}

/* Solid colors */
.btnPrimary { /* Sign Up */
    background: #3b82f6; /* blue */
    color: #fff;
}

.btnSecondary { /* Log In */
    background: #ef4444; /* red */
    color: #fff;
}

    /* Keep the lift-on-hover but let shimmer handle the highlight */
    .btnPrimary:hover,
    .btnSecondary:hover {
        filter: none;
    }

    /* Shimmer sweep */
    .btnPrimary::before,
    .btnSecondary::before {
        content: "";
        position: absolute;
        top: -50%;
        left: -30%;
        width: 30%;
        height: 200%;
        transform: skewX(-20deg) translateX(-120%);
        background: linear-gradient(90deg, transparent, rgba(255,255,255,.55), transparent);
        opacity: 0;
        transition: opacity 180ms ease, transform 600ms ease;
        pointer-events: none;
    }

    .btnPrimary:hover::before,
    .btnSecondary:hover::before {
        opacity: .9;
        transform: skewX(-20deg) translateX(420%);
    }

/* Subtle active press */
.btnPrimary:active {
    background: #326fdc;
}

.btnSecondary:active {
    background: #d73737;
}
/* === Notifications (bottom, green) === */
#notifyStack {
    position: fixed;
    left: 50%;
    bottom: 20px;
    transform: translateX(-50%);
    display: grid;
    gap: 10px;
    z-index: 50;
    pointer-events: none
}

.notify {
    pointer-events: none;
    min-width: 260px;
    text-align: center;
    padding: 12px 16px;
    border-radius: 12px;
    font-weight: 800;
    letter-spacing: .2px;
    color: #062013; /* readable on green */
    background: linear-gradient(180deg,#22c55e,#16a34a);
    border: 1px solid rgba(255,255,255,.22);
    box-shadow: 0 14px 30px rgba(0,0,0,.35);
    animation: notifyIn .22s ease both
}

    .notify.leaving {
        opacity: 0;
        transform: translateY(8px);
        transition: opacity .18s ease,transform .18s ease
    }

@keyframes notifyIn {
    from {
        opacity: 0;
        transform: translateY(8px)
    }

    to {
        opacity: 1;
        transform: none
    }
}

/* === Tank selector: dead-center & full-height arrows === */
#selectorWrap {
    position: fixed; /* ignore side panel: center on viewport */
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%);
    width: auto;
    display: grid;
    place-items: center;
    z-index: 1
}

#tankCard {
    position: relative;
    width: min(900px,70vw);
    aspect-ratio: 2.2/1;
}

/* side arrows sized to match the tank card height */
:root {
    --arrowW: 72px
}

.navArrow {
    position: absolute;
    top: 0;
    bottom: 0; /* full height */
    height: 100%;
    width: var(--arrowW);
    border-radius: 18px;
    border: 0;
    background: linear-gradient(135deg,#2a3348,#1f2636);
    color: #e1eaff;
    cursor: pointer;
    display: grid;
    place-items: center;
    box-shadow: 0 10px 30px rgba(0,0,0,.35),0 8px 16px rgba(0,0,0,.25);
    transition: transform .24s ease,background .24s ease,opacity .18s ease
}

#prevTank {
    left: calc(-1 * (var(--arrowW) + 16px))
}

#nextTank {
    right: calc(-1 * (var(--arrowW) + 16px))
}

.navArrow:hover svg {
    transform: translateX(-2px)
}

#nextTank:hover svg {
    transform: translateX(2px)
}

.navArrow[disabled] {
    opacity: .6;
    pointer-events: none
}

.navArrow svg {
    width: 40px;
    height: 40px;
    transition: transform .16s ease
}

@media (max-width:900px) {
    :root {
        --arrowW: 56px
    }
}
/* === Fix: tank selector arrows (dock + exact inner height) === */

/* control the inner panel inset once, reuse for arrows */
:root {
    --silInsetY: 18%; /* top/bottom inset of black inner panel */
    --silInsetX: 14%; /* left/right inset of black inner panel */
    --arrowW: 72px; /* arrow width */
}

/* ensure the silhouette uses the same inset vars */
#tankSilhouette {
    inset: var(--silInsetY) var(--silInsetX);
}

/* center the whole selector on the viewport */
#selectorWrap {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: auto;
    display: grid;
    place-items: center;
    z-index: 1;
}

/* arrows: height matches the inner panel, docked to card edge */
.navArrow {
    position: absolute;
    top: var(--silInsetY);
    bottom: var(--silInsetY); /* full height of inner panel */
    width: var(--arrowW);
    border-radius: 18px;
    border: 0;
    background: linear-gradient(135deg, #2a3348, #1f2636);
    color: #e1eaff;
    cursor: pointer;
    display: grid;
    place-items: center;
    box-shadow: 0 10px 30px rgba(0,0,0,.35), 0 8px 16px rgba(0,0,0,.25);
    transition: transform .24s ease, background .24s ease, opacity .18s ease;
}

/* flush against the card edge (no extra gap) */
#prevTank {
    left: calc(-1 * var(--arrowW));
}

#nextTank {
    right: calc(-1 * var(--arrowW));
}

/* tidy the icon size & hover nudge */
.navArrow svg {
    width: 36px;
    height: 36px;
    transition: transform 160ms ease;
}

#prevTank:hover svg {
    transform: translateX(-2px);
}

#nextTank:hover svg {
    transform: translateX( 2px);
}

.navArrow[disabled] {
    opacity: .6;
    pointer-events: none;
}

/* responsive width tweak */
@media (max-width: 900px) {
    :root {
        --arrowW: 56px;
    }
}
/* === Final Fix: Tank selector arrows align with silhouette === */
:root {
    --silInsetY: 18%; /* vertical inset of silhouette */
    --silInsetX: 14%; /* horizontal inset of silhouette */
    --arrowW: 72px; /* arrow width */
}

#selectorWrap {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: auto;
    display: grid;
    place-items: center;
    z-index: 1;
}

#tankSilhouette {
    inset: var(--silInsetY) var(--silInsetX); /* keep consistent with vars */
}

.navArrow {
    position: absolute;
    top: var(--silInsetY);
    bottom: var(--silInsetY); /* match silhouette vertical */
    width: var(--arrowW);
    border-radius: 18px;
    border: 0;
    background: linear-gradient(135deg, #2a3348, #1f2636);
    color: #e1eaff;
    cursor: pointer;
    display: grid;
    place-items: center;
    box-shadow: 0 10px 30px rgba(0,0,0,.35), 0 8px 16px rgba(0,0,0,.25);
    transition: transform .24s ease, background .24s ease, opacity .18s ease;
}

#prevTank {
    left: calc(-1 * var(--arrowW));
}

#nextTank {
    right: calc(-1 * var(--arrowW));
}

.navArrow svg {
    width: 36px;
    height: 36px;
    transition: transform 160ms ease;
}

#prevTank:hover svg {
    transform: translateX(-2px);
}

#nextTank:hover svg {
    transform: translateX(2px);
}

.navArrow[disabled] {
    opacity: .6;
    pointer-events: none;
}

@media (max-width: 900px) {
    :root {
        --arrowW: 56px;
    }
}
/* === Hard Fix: Tank selector arrows align with inner silhouette === */
:root {
    /* keep these here so they override earlier duplicates */
    --silInsetY: 18%; /* vertical inset of the black silhouette */
    --silInsetX: 14%; /* horizontal inset of the black silhouette */
    --arrowW: 72px; /* arrow column width */
}

/* ensure silhouette + arrows share the same inset math */
#tankSilhouette {
    position: absolute;
    inset: var(--silInsetY) var(--silInsetX) !important;
}

/* center selector on viewport (ignores side panel) */
#selectorWrap {
    position: fixed !important;
    left: 50% !important;
    top: 50% !important;
    transform: translate(-50%, -50%) !important;
    width: auto !important;
    display: grid !important;
    place-items: center !important;
    z-index: 1 !important;
}

/* arrows: same vertical span as the silhouette, flush to card edge */
#tankCard .navArrow {
    position: absolute !important;
    top: var(--silInsetY) !important;
    bottom: var(--silInsetY) !important;
    height: auto !important; /* use top/bottom instead of fixed height */
    width: var(--arrowW) !important;
    border-radius: 18px;
    border: 0;
    background: linear-gradient(135deg, #2a3348, #1f2636);
    color: #e1eaff;
    cursor: pointer;
    display: grid;
    place-items: center;
    box-shadow: 0 10px 30px rgba(0,0,0,.35), 0 8px 16px rgba(0,0,0,.25);
    transition: transform .24s ease, background .24s ease, opacity .18s ease;
    z-index: 2; /* sit above the card */
}

/* dock to the card edges with no extra gap */
#tankCard #prevTank {
    left: calc(-1 * var(--arrowW)) !important;
}

#tankCard #nextTank {
    right: calc(-1 * var(--arrowW)) !important;
}

/* tidy the icon size + nudge on hover */
#tankCard .navArrow svg {
    width: 36px !important;
    height: 36px !important;
    transition: transform 160ms ease;
}

#tankCard #prevTank:hover svg {
    transform: translateX(-2px);
}

#tankCard #nextTank:hover svg {
    transform: translateX( 2px);
}

#tankCard .navArrow[disabled] {
    opacity: .6;
    pointer-events: none;
}

/* responsive tweak */
@media (max-width: 900px) {
    :root {
        --arrowW: 56px;
    }
}
/* === Center the entire selector (arrows + card) on the viewport === */
#selectorWrap {
    position: fixed !important; /* take it out of the grid */
    left: 50% !important;
    top: 50% !important;
    transform: translate(-50%, -50%) !important;
    width: auto !important; /* let #tankCard size itself */
    display: grid !important;
    place-items: center !important;
    z-index: 5 !important;
    pointer-events: none; /* keep layout clean; re-enable below */
}

    #selectorWrap > * {
        pointer-events: auto;
    }

/* Keep arrows hugging the card but centered vertically */
#tankCard {
    position: relative !important;
    width: min(900px, 70vw) !important;
}

    #tankCard .navArrow {
        position: absolute !important;
        top: 50% !important;
        transform: translateY(-50%) !important; /* vertical center */
        width: 72px !important; /* keep your paddle width */
        border-radius: 18px !important;
        z-index: 6 !important;
    }

/* one on each side of the centered card */
#prevTank {
    left: -72px !important;
}

#nextTank {
    right: -72px !important;
}

/* responsive nudge so they never drift */
@media (max-width: 900px) {
    #tankCard .navArrow {
        width: 56px !important;
    }

    #prevTank {
        left: -56px !important;
    }

    #nextTank {
        right: -56px !important;
    }
}
